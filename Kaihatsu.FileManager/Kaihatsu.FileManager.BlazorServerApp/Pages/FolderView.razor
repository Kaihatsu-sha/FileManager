@page "/folderview"
<PageTitle>PageTitle</PageTitle>

@using Kaihatsu.FileManager.Core.Abstraction.Services
@using Kaihatsu.FileManager.Core.Abstraction;
@using Kaihatsu.FileManager.Business;
@inject INavigationService navigationService
@inject OperationsFactory facroty

<h3>FolderView</h3>

@if (_fileInfo == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @if(_canTheUp)
    {
        <button class="btn" @onclick="GoUp">Parent</button>
    }
    <span>--//--</span>
    @if (_canOpenPrevious)
    {
        <button @onclick="OpenPrevious">Back</button>
    }
    <br/>
    <input value="@_currentPath"/>
    <table class="table">
        <thead>
            <tr>
                <th>Тип</th>
                <th>Имя</th>
                <th>Размер KB</th>
                <th>Дата создания</th>
                <th>Дата изменения</th>
                <th>Доп. опции</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in _fileInfo)
            {
                <tr id="@forecast.Name">
                    @if (forecast.Type == FileType.Folder)
                    {
                        <td>Folder</td>
                        <td><button @onclick="(()=>OpenDirectory(forecast.FullPath) )">@forecast.Name</button></td>
                        <td>-</td>
                        <td>@forecast.CreationTime</td>
                        <td>@forecast.LastWriteTime</td>
                        <td @onclick="ToggleOperationMenu">развернуть</td>
                    }
                    else
                    {
                        <td>File</td>
                        <td>@forecast.Name</td>
                        <td>@forecast.Size</td>
                        <td>@forecast.CreationTime</td>
                        <td>@forecast.LastWriteTime</td>
                        <td @onclick="ToggleOperationMenu">развернуть</td>
                       
                    }     
  
                </tr>
                <tr class="@OperationMenuCssClass"> 
                    <td colspan="6">
                    <button class="btn" @onclick="Create">Create</button>
                    <button class="btn" @onclick="Delete">Delete</button>
                    <button class="btn" @onclick="Move">Move</button>
                    <button class="btn" @onclick="Rename">Rename</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code 
{
    private IEnumerable<FileInfoBase>? _fileInfo;
    private IOperationsFactoryService _operationsFactory;
    private string _currentPath = "";
    private bool _collapseOperationMenu = true;
    private bool _canTheUp = false;
    private bool _canOpenPrevious = false;


    private string? OperationMenuCssClass => _collapseOperationMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        OpenDirectory(null);
    }

    private void Reset()
    {
        _fileInfo = null;
        _canOpenPrevious = navigationService.CanOpenPrevious;
        _canTheUp = navigationService.CanTheUp;
        _fileInfo = navigationService.GetAllFromCurrentDirection();
        _currentPath = navigationService.Path;
    }

    private async Task OpenDirectory(string path)
    {
        if (navigationService.CheckingPath(path))
        {
            Reset();
        }
        //Сообщение об ошибке
    }

    private async Task GoUp()
    {
        navigationService.GoUp();
        Reset();
    }

    private async Task OpenPrevious()
    {
        navigationService.OpenPrevious();        
        Reset();        
    }

    private void ToggleOperationMenu()
    {
        _collapseOperationMenu = !_collapseOperationMenu;
    }

    private void Create()
    {
        
    }

    private void Delete()
    {}
    private void Rename()
    {}
    private void Move()
    {}
}
